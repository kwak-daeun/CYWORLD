<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- @Controller, @Service 어노테이션 기능을 활성화 -->
	<annotation-driven />
	
	<!-- @Transactional 어노테이션 기능을 활성화 -->
	<tx:annotation-driven />
	
	<!-- @Aspect 어노테이션을 이용한 AOP 객체 관리를 활성화 -->
	<aop:aspectj-autoproxy />
	
	<!-- 인터셉터 설정 -->
<!-- 	<interceptors>
		<interceptor>
			인터셉트가 적용될 URL
			<mapping path="/admin/**" />
			인터셉터가 적용되지 않도록 제외할 URL
			<exclude-mapping path="/admin/login" />
			<exclude-mapping path="/admin/main" />
			<exclude-mapping path="/admin/join" />
			인터셉터 클래스 지정
			<beans:bean class="interceptor.AdminInterceptor" />
		</interceptor>

		<interceptor>
			<mapping path="/interceptor/board/**" />
			비효율적, 한 페이지만 처리하려면 사용
			한 페이지만 처리하면 exclude-mapping 태그 없이도 사용 가능
			<mapping path="/interceptor/board/write" />
			<exclude-mapping path="/interceptor/board/list" />
			<exclude-mapping path="/interceptor/board/noLogin" />
			<beans:bean class="interceptor.interceptor.BoardInterceptor" />	
		</interceptor>
	</interceptors>
 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- JSP(InternalResource)를 이용하여 View를 지정하는 객체 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- ViewResolver 동작 우선순위 - 1 -->
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- 스프링 빈 객체를 이용하여 View를 지정하는 객체 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<!-- ViewResolver 동작 우선순위 - 0(낮은게 우선순위가 높음) -->
		<beans:property name="order" value="0" />
	</beans:bean>
	
	<!-- JSON 응답용 jsonView를 스프링 빈으로 등록 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=UTF-8" />
	</beans:bean>
	
	<!-- 파일 업로드가 필요하면 여기에 추가하기 -->
	
	
	<!-- 추후 추가 : 각 contoller, service -->
	<!-- ex) diary.controller, diary.service 등 -->
	<context:component-scan base-package="a.b.c, album.controller, book.controller, diary.controller, reply.controller, user.controller" />
</beans:beans>